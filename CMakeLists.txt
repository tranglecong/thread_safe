cmake_minimum_required(VERSION 3.15)
project(TRLC_THREAD_SAFE VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

option(TRLC_BUILD_TESTS "Enable building tests (ON or OFF)" OFF)
option(TRLC_BUILD_EXAMPLES "Enable building tests (ON or OFF)" OFF)

set(TRLC_THREAD_SAFE_HEADER_PATH "${CMAKE_CURRENT_SOURCE_DIR}/include/")
file(GLOB_RECURSE  TRLC_THREAD_SAFE_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp")
file(GLOB_RECURSE  TRLC_THREAD_SAFE_SOURCES_FILES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")

add_library(threadsafe STATIC ${TRLC_THREAD_SAFE_HEADER_FILES} ${TRLC_THREAD_SAFE_SOURCES_FILES})
add_library(trlc::threadsafe ALIAS threadsafe)

target_include_directories(threadsafe PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
    $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
)

if(TRLC_BUILD_EXAMPLES)
    add_subdirectory(example)
endif()

if(TRLC_BUILD_TESTS)
    enable_testing()
    add_subdirectory(tests)
endif()

if(UNIX OR VXWORKS)
    include(GNUInstallDirs)

    set(TRLC_THREAD_SAFE_INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_INCLUDEDIR}")
    set(TRLC_THREAD_SAFE_RUNTIME_INSTALL_DIR "${CMAKE_INSTALL_BINDIR}")
    set(TRLC_THREAD_SAFE_LIBRARY_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}")
    set(TRLC_THREAD_SAFE_ARCHIVE_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}")
    set(TRLC_THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/trlc")
elseif(WIN32)
    set(TRLC_THREAD_SAFE_INCLUDE_INSTALL_DIR "include")
    set(TRLC_THREAD_SAFE_RUNTIME_INSTALL_DIR "bin")
    set(TRLC_THREAD_SAFE_LIBRARY_INSTALL_DIR "bin")
    set(TRLC_THREAD_SAFE_ARCHIVE_INSTALL_DIR "lib")
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
    set(TRLC_THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR "share/cmake/trlc")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
else()
    message(FATAL_ERROR "Could not set install folders for this platform!")
endif()

include(CMakePackageConfigHelpers)

install(TARGETS threadsafe EXPORT threadsafeTargets
    RUNTIME DESTINATION ${TRLC_THREAD_SAFE_RUNTIME_INSTALL_DIR}
    LIBRARY DESTINATION ${TRLC_THREAD_SAFE_LIBRARY_INSTALL_DIR}
    ARCHIVE DESTINATION ${TRLC_THREAD_SAFE_ARCHIVE_INSTALL_DIR}
    INCLUDES DESTINATION ${TRLC_THREAD_SAFE_INCLUDE_INSTALL_DIR}
)

install(DIRECTORY ${TRLC_THREAD_SAFE_HEADER_PATH}
    DESTINATION ${TRLC_THREAD_SAFE_INCLUDE_INSTALL_DIR}
    FILES_MATCHING
    PATTERN "*.hpp"
)

configure_package_config_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/cmake/trlcConfig.cmake.in
    ${CMAKE_CURRENT_BINARY_DIR}/trlcConfig.cmake
    INSTALL_DESTINATION ${TRLC_THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR}
)

install(FILES ${CMAKE_CURRENT_BINARY_DIR}/trlcConfig.cmake
    DESTINATION ${TRLC_THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR}
)

install(EXPORT threadsafeTargets
    NAMESPACE trlc::
    DESTINATION ${TRLC_THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR}
)