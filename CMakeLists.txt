cmake_minimum_required(VERSION 3.10)
project(THREAD_SAFE)

set(THREAD_SAFE_VERSION_MAJOR 1 CACHE STRING "Major version" FORCE)
set(THREAD_SAFE_VERSION_MINOR 0 CACHE STRING "Minor version" FORCE)
set(THREAD_SAFE_VERSION_PATCH 0 CACHE STRING "Patch version" FORCE)
set(THREAD_SAFE_VERSION "${THREAD_SAFE_VERSION_MAJOR}.${THREAD_SAFE_VERSION_MINOR}.${THREAD_SAFE_VERSION_PATCH}"
    CACHE STRING "Version" FORCE)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set debug postfix
set(CMAKE_DEBUG_POSTFIX "-dbg")

# Installation destinations
if(UNIX OR VXWORKS)
    include(GNUInstallDirs)
    set(THREAD_SAFE_INC_INSTALL_DIR "${CMAKE_INSTALL_INCLUDEDIR}")
    set(THREAD_SAFE_RUNTIME_INSTALL_DIR "${CMAKE_INSTALL_BINDIR}")
    set(THREAD_SAFE_LIBRARY_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}")
    set(THREAD_SAFE_ARCHIVE_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}")
    set(THREAD_SAFE_FRAMEWORK_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}")
    set(THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/thread_safe/cmake")
    set(THREAD_SAFE_ADDITIONAL_FILES_INSTALL_DIR "${CMAKE_INSTALL_DATADIR}/${CMAKE_PROJECT_NAME}")
elseif(WIN32)
    set(THREAD_SAFE_INC_INSTALL_DIR "include")
    set(THREAD_SAFE_RUNTIME_INSTALL_DIR "bin")
    set(THREAD_SAFE_LIBRARY_INSTALL_DIR "bin")
    set(THREAD_SAFE_ARCHIVE_INSTALL_DIR "lib")
    set(THREAD_SAFE_FRAMEWORK_INSTALL_DIR "bin")
    set(THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR "share/thread_safe/cmake")
    set(THREAD_SAFE_ADDITIONAL_FILES_INSTALL_DIR "share/${CMAKE_PROJECT_NAME}")
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
else()
    message(FATAL_ERROR "Could not set install folders for this platform!")
endif()

# Subdirectories
add_subdirectory(src)

if(THREAD_SAFE_BUILD_TESTS)
    enable_testing()
    add_subdirectory(tests)
endif()

# Install Readme and License
install(FILES "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE" "${CMAKE_CURRENT_SOURCE_DIR}/README.md" DESTINATION ${THREAD_SAFE_ADDITIONAL_FILES_INSTALL_DIR})

install(EXPORT thread_safeTargets DESTINATION ${THREAD_SAFE_CMAKE_CONFIG_INSTALL_DIR}
    FILE thread_safe-config.cmake)